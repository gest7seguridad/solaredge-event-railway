version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: solaredge_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-solaredge_event}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_backup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - solaredge_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: solaredge_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-solaredge_event}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - solaredge_network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  frontend:
    image: nginx:alpine
    container_name: solaredge_frontend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - solaredge_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  solaredge_network:
    driver: bridge